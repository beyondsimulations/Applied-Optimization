---
title: "Lecture X - Intermission: Exam Preparation"
subtitle: "Applied Optimization with Julia"
author: "Dr. Tobias VlÄ‡ek"
institute: "University of Hamburg - Fall 2024"
title-slide-attributes:
    data-background-color: "#025259"
html-math-method:
  method: mathjax
  url: "https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"

format:
    revealjs:
        theme: [default, ../styles.scss]
        transition: slide
        transition-speed: fast
        highlight-style: arrow
        slide-number: true
        code-copy: true
        code-link: true
        preview-links: auto
        footer: " {{< meta title >}} | {{< meta author >}} | [Home](lecture-intermission.qmd)"
        output-file: lecture-presentation.html
    html:
        theme: [litera, ../styles_html.scss]
    pdf: 
        documentclass: report
        geometry:
            - margin=1in
        fontfamily: roboto
        fontfamilyoptions: sfdefault
        colorlinks: true

bibliography: ../AppliedBib.bib

execute:
    eval: false

engine: julia
---

# [Intermission]{.flow} {.title}

## Today's lecture

- Today's lecture is a **little bit different**
- Manage your expectations
- Give you a **better idea** of what to expect from the exam
- We will go through **some examples together!**

## Exam's structure

- Exam consists of **three parts**
- Free modelling, questions, Julia coding
- Each point corresponds to [approximately 1 minute of work]{.highlight}

. . .

::: {.callout-important}
You can take a **handwritten** DIN A4 sheet of paper with you!
:::

## Exam Preparation Checklist

::: {.callout-tip}
## Before starting the exam:

- [ ] Review modeling notation conventions
- [ ] Practice writing sets, parameters, and variables
- [ ] Review common constraint patterns
- [ ] Practice Julia syntax
- [ ] Prepare your DIN A4 cheat sheet
:::

# [Part I]{.flow} {.title}

## 1.a (6 Points) {.scrollable}

A company that ships ice cream wants to maximize their profit. It can do that by transporting its different sorts of ice cream from their only production facility to several supermarkets. 

Each delivered sort of ice cream makes the ice cream company a different profit per unit. The transportation costs per truckload are already included in the profit calculation. The company should maximally deliver the agreed number of units of each ice cream sort to each individual supermarket.

To do so, the company owns one truck which has a fixed total capacity for a number of units of ice cream. Note, that each unit of ice cream consumes a different amount of space in the truck! The required space for each unit of ice cream is given for each sort. The optimal number of units from each sort to ship to each supermarket should be computed by the model.

Define all sets, parameters and variables required to model the problem described above. Select a suitable notation of your choice. Make sure to explicitly state in your notation which elements are sets, parameters and variables.

::: {.callout-tip}
Note that the problem does not have to be modeled yet!
:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 1.b (2 Points)  {.scrollable}

Please define the objective function to model the described problem based on your defined notation.

::: {.callout-tip}
If you need additional sets, parameters or variables that are not yet defined, please define them as well.
:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 1.c (4 Points)  {.scrollable}

Please define all necessary constraints and the variable ranges to model the described problem based on your notation.

::: {.callout-tip}
If you need additional sets, parameters or variables that are not yet defined, please define them as well.
:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 1.d (2 Points)  {.scrollable}

Is the model formulation a linear problem with binary variables? 

Please explain your answer briefly.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 1.e (8 Points) {.scrollable}

The supermarkets are furious because the company doesn't always deliver the agreed truckloads of ice cream. Therefore, they want to penalize the company in the future, if it delivers less than the agreed amount. For each demand of a supermarket that could not be fulfilled, the company will have to pay a one-time fee for the ice-cream sort. 

How can you expand your model to reflect this new situation? Write down all additional or modified sets, parameters, variables, constraints and the objective function while describing each with a few words.

::: {.callout-tip}
Note, that you only need to write down new and modified elements!
:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 1.f (8 Points) {.scrollable}

Next to the production facility of the ice cream company sits a company that sells frozen fish. Due to declining fish stocks in the ocean, the company does not need all of its trucks. It offers to rent their trucks for a certain price to the ice cream company so it can transport more ice cream. These trucks have twice the capacity of the truck currently in use by the ice cream company.

How can you expand your model to reflect this new situation? Write down all additional or modified Sets, parameters, variables, constraints and the objective function while describing each with a few words. 

::: {.callout-tip}
Note, that you only need to write down new and modified elements! If you haven't solved the previous task, work with the model defined before.
:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

# [Part II]{.flow} {.title}

## 2.a (3 Points)  {.scrollable}

What is the goal of the Territory Design Problem (Districting Problem)? 

Please answer in 2-3 sentences.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::


## 2.b (3 Points) {.scrollable}

::: {.columns}

::: {.column width="50%"}
| $t_{mi}$ | A | B | C | D |
|----------|---|---|---|---|
| 1        | 0 | 0 | 1 | 1 |
| 2        | 1 | 0 | 1 | 0 |
| 3        | 1 | 0 | 0 | 1 |
| 4        | 1 | 0 | 1 | 1 |
| 5        | 1 | 1 | 0 | 1 |
| 6        | 1 | 1 | 0 | 1 |
:::

::: {.column width="50%"}
Please compute the coappearance matrix that results from these transactions.

:::

:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 2.c (2 Points)  {.scrollable}

Briefly explain in 2-3 sentences what a global optimum in an optimization problem is.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

## 2.d (3 Points)  {.scrollable}

Name three optimization problems, e.g. Knapsack Problem. 

You are welcome to answer this question in bullet points.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::


## 2.e (4 Points)  {.scrollable}

Explain briefly in 2-3 sentences what so-called "Big-M" constraints can be used for in mathematical modeling.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::

# [Part III]{.flow} {.title}

## Hints

::: {.callout-note}
## Programming Tips

- Pay attention to variable names and consistency
- Check for proper package imports
- Verify array indexing
- Remember to use the correct comparison operators
- Make sure to use proper JuMP syntax
:::

\newpage

## 3.a (7 Points) {.scrollable}

The following Julia code contains seven errors. Highlight the errors in the code and briefly describe what would need to be done to correct them.

::: {.callout-note}
Assume that all variables containing data are loaded correctly, e.g. availablePanels and requestedPanels are already defined.
:::

```julia
# Load the necessary packages
using JuMP
using HiGHS

# Define the size of the problem instance
nrSuppliers = length(availablePanels)
nrCustomers = length(requestedPanels)

# Create model instance
transport = Model(HiGHS.Optimizer)

# Define variable
@variable(transport_model, X[i = nrSuppliers,j = 1:nrCustomers], Bin)

# Define objective
@objective(transport_model, Max, 
    sum(travelCosts[i,j]* X[i] for i in 1:nrSuppliers, j in 1:nrCustomers)
    )
# Define the constraints
@constraint(transport_model, 
    restrictAvailable[i=1:nrSuppliers], 
    sum(X[i,j] for j in 1:nrCustomers) <= available[i]
    )
@constraint(transport_model,
    restrictDemand[j=1:nrCustomers], 
    sum(X[i,j] for i in 1:nrSuppliers) === requested[j]
    )
# Start optimization
start_optimization(transport_model)
```

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::


## 3.b (4 Points)  {.scrollable}

In an optimization model, the following equations are given:

$$
\sum_{m\in \mathcal{M}} 7 * U_{gm} * T_m - \sum_{k \in \mathcal{K}} R_k \leq D_g \quad \forall g \in \mathcal{G}
$$

Please **define the equations in correct Julia syntax**.

::: {.callout-note}
Assume that all required sets, variables, and parameters have already been defined.
:::

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::


## 3.c (2 Points)  {.scrollable}

For an optimization model the following binary variable is supposed to be created:

$X_{i,j}$ where $i \in \{1,2,...,10\}$ and $j \in \{1,2,...,5\}$. 

Specify the definition of the variable in correct Julia syntax.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
\newpage
:::


## 3.d (2 Points)  {.scrollable}

What is the difference between a linear and a nonlinear problem? Please describe the difference in a few sentences.

::: {.content-visible when-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Solution

```
:::

::: {.content-visible unless-profile="solutions"}
\vspace{0.1in}
```{julia}
#| eval: false
# Your answer here
|
|
|
|
|
|
|
|
|
|
|
|
|
|
```
:::


# [Wrap Up]{.flow} {.title}

## Key Takeaways

::: {.callout-important}
## Remember

- Time management is crucial
- Read questions carefully
- Describe your work clearly
- Use your cheat sheet strategically
- Double-check your answers if time permits
:::

## The end

::: {.callout-note}
## And that's it for todays lecture!

We now have covered the structure of the exam and you have a better idea of what to expect from the exam. In our upcoming tuorial, we will go through some additional examples and practice tasks.
:::

## {.loud-slide}
::: {.r-fit-text}
Questions?
:::

::: footer
:::

# [Literature]{.flow} {.title}


## Literature I

For more interesting literature to learn more about Julia, take a look at the [literature list](../general/literature.qmd) of this course.