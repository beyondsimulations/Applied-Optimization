{
  "hash": "5fc56ea2629ce7ab99332ced7c1dc852",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Lecture II - First Steps in Julia\"\nsubtitle: \"Applied Optimization with Julia\"\nauthor: \"Dr. Tobias Vlćek\"\ninstitute: \"University of Hamburg - Fall 2024\"\ntitle-slide-attributes:\n    data-background-color: \"#025259\"\n\nformat:\n    revealjs:\n        theme: [default, ../styles.scss]\n        transition: slide\n        transition-speed: fast\n        highlight-style: breezedark\n        slide-number: true\n        code-copy: true\n        code-link: true\n        preview-links: auto\n        footer: \" {{< meta title >}} | {{< meta author >}} | [Home](lecture-firststeps.qmd)\"\n        output-file: lecture-presentation.html\n    html:\n        theme: litera\n        highlight-style: breezedark\n        linkcolor: \"#a60000\"\n        slide-number: true\n        code-copy: true\n        code-link: true\n        toc: true\n        toc-location: right\n    pdf: \n        documentclass: report\n        geometry:\n            - margin=1in\n        fontfamily: roboto\n        fontfamilyoptions: sfdefault\n        colorlinks: true\n\nbibliography: ../AppliedBib.bib\n\nengine: julia\n\nexecute:\n    echo: true\n---\n\n\n\n\n\n\n\n\n# [Quick Recap on the Technical Setup]{.flow} {.title}\n\n## Download and Install Julia\n\n![](../images/julia-programming-language.png)\n\nTo prepare for the upcoming lectures, we start by installing the Julia Programming Language and an Integrated Development Environment (IDE) to work with Julia.\n\n## Installating Julia\n\n![](../images/julia2.png){max-width=400px}\n\n- Head to [julialang.org](https://julialang.org) and follow the instructions. \n\n. . .\n\n:::{.callout-tip}\nIf you are ever asked to add something to your \"PATH\", do so!\n:::\n\n## VS Code\n\n![](../images/codium_cnl.png){max-width=400px}\n\n- Next, we are going to install VS Code\n- Alternatively, you can install VS Codium \n- It is essentially VS Code but without any tracking by MS\n\n## Installing VS Code\n\n- Head to the website [code.visualstudio.com](https://code.visualstudio.com)\n- OR to the webside [vscodium.com](https://vscodium.com) \n- Download and install the latest release\n\n## Verify the Installation\n\n- Start the IDE and take a look around\n- Search for the field \"Extensions\" on the left sidebar\n- Click it and search for \"Julia\"\n- Download and install \"Julia (Julia Language Support)\"\n\n## Create a new file\n\n- Create a new file with a \".jl\" ending\n- Save it somewhere on your computer\n- e.g., in a folder that you will use in the course\n\n\n\n\n\n\n\n\n::: {.cell output-location='fragment' execution_count=1}\n``` {.julia .cell-code}\nprint(\"Hello World!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello World!\n```\n:::\n:::\n\n\n\n\n\n\n\n\n\n\n- Run the file by clicking \"run\" in the upper right corner \n- OR by pressing \"Control+Enter\" or \"STRG+Enter\"\n\n## Everything working?\n\n- If the terminal opens with a `Hello World!` → perfect!\n- If not, it is likely that the IDE [cannot find the path]{.highlight} to Julia\n- Try to determine the path and save it to VS Code\n- After saving it, try to run the file again\n\n:::{.callout-tip}\nDon't worry if it is not running right away. We will fix this together!\n:::\n\n# [Learning Julia]{.flow} {.title}\n\n## Julia as a Programming Language\n\n- Following three lectures are dedicated to learning the basics\n- Start with the very basics and gradually move on\n- Focus in the first two lectures on the programming language\n- Third lecture dedicated to [Mathematical Optimization]{.highlight}\n\n# [Working with VS Code]{.flow} {.title}\n\n## Notebooks in VS Code\n\n- The easiest way is by using VS Code\n- Install the Jupyter Extension \n- Now, you can open `.ipynb` files \n- Here you can run the code in the cells\n\n## Downloading the Notebooks\n\n- You will find the tutorial notebooks next to the tutorial pages\n- On each page, you will find a button `Jupyter` on the right\n- Click it to download the notebook and save it\n- I'd recommend storing the notebooks [in a separate directory for this course]{.highlight}\n\n## Learning by doing\n\n- The best way to learn a programming language is [by doing]{.highlight}\n- We will therefore solve problems the coming weeks\n- The goal is to get you familiar with the language\n- You can discuss the problems with your fellow students\n- You can hand in your solutions to receive bonus points!\n\n# [Working with IJulia]{.flow} {.title}\n\n## IJulia\n\n- IJulia is an interface between Julia and Jupyter Notebooks\n- Popular tool for data analysis and visualization\n- You can use IJulia to run [Julia code in the notebooks]{.highlight}\n\n. . .\n\n:::{.callout-tip}\nYou can also copy and paste code from the notebooks into your IDE!\n:::\n\n## Installing IJulia\n\n- Open the VS Code IDE and start a terminal\n- Start Julia by typing `julia` in the terminal\n- Install IJulia by typing `]` to open the package manager\n- Install IJulia by typing `add IJulia`\n- Press `Enter`\n\n## Running IJulia\n\n```julia\nusing IJulia; notebook()\n```\n\n- Start IJulia by typing the above code in the Julia prompt\n- This will open a new browser window\n- You can now run code in the notebooks\n\n. . .\n\n:::{.callout-tip}\nYou can also run the notebooks in VS Code, if you prefer!\n:::\n\n# [Submission of Assignments]{.flow} {.title}\n\n## Submission of Assignments\n\n- You can work in groups of up to three people\n- Submit the assignment via OpenOlat\n- You will submit your assignment by uploading a notebook\n- The assignment is due [the day before the next tutorial]{.highlight}\n\n. . .\n\n:::{.callout-tip}\nDon't forget to save your notebook before uploading it to OpenOlat!\n:::\n\n## Grading of Assignments\n\n- Each assignment is worth 0.5 points\n- You can get a maximum of 6.0 points from the assignments\n- The points will be added to your exam points\n- You need to pass the exam first, to receive any bonus points!\n\n. . .\n\n:::{.callout-note}\nThe assignments are **not** mandatory, but highly recommended!\n:::\n\n# [Five Tutorials for this Week]{.flow} {.title}\n\n## Topics of the Tutorials\n\n- **Variables**: Learn how to assign values to variables\n- **Vectors**: Learn how to create and manipulate vectors\n- **Comparisons**: Learn how to compare values\n- **Loops**: Learn how to use loops to repeat code\n- **Scope**: Learn about the scope of variables\n\n## Get started with the tutorials\n\n- Download the first notebook and open it\n- Start with the [first problem and solve it step by step]{.highlight}\n- You can find the tutorials here on the website\n- [You can ask questions anytime!]{.highlight}\n\n. . .\n\n::: {.callout-note}\n**And that's it for this lecture!**\\\nThe remaining time we will already start working on the first problems.\n:::\n\n# [Literature]{.flow} {.title}\n\n\n## Literature\n\n- Lauwens, B., & Downey, A. B. (2019). Think Julia: How to think like a computer scientist (First edition). O’Reilly®. [Link to the free book website](https://benlauwens.github.io/ThinkJulia.jl/latest/book.html).\n\n- [Julia Documentation](https://docs.julialang.org/)\n\nFor more interesting literature to learn more about Julia, take a look at the [literature list](../general/literature.qmd) of this course.\n\n",
    "supporting": [
      "lecture-firststeps_files/figure-pdf"
    ],
    "filters": []
  }
}