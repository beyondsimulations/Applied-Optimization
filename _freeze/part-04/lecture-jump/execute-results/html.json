{
  "hash": "0cdce2f7286d6f2db359e7b15ac0ccf2",
  "result": {
    "engine": "julia",
    "markdown": "---\ntitle: \"Lecture IV - Modelling with JuMP\"\nsubtitle: \"Applied Optimization with Julia\"\nauthor: \"Dr. Tobias Vlćek\"\ninstitute: \"University of Hamburg - Fall 2024\"\ntitle-slide-attributes:\n    data-background-color: \"#025259\"\n\nformat:\n    revealjs:\n        theme: [default, ../styles.scss]\n        transition: slide\n        transition-speed: fast\n        highlight-style: breezedark\n        slide-number: true\n        code-copy: true\n        code-link: true\n        preview-links: auto\n        footer: \" {{< meta title >}} | {{< meta author >}} | [Home](lecture-jump.qmd)\"\n        output-file: lecture-presentation.html\n    html:\n        theme: litera\n        highlight-style: breezedark\n        linkcolor: \"#a60000\"\n        slide-number: true\n        code-copy: true\n        code-link: true\n        toc: true\n        toc-location: right\n    pdf: \n        documentclass: report\n        geometry:\n            - margin=1in\n        fontfamily: roboto\n        fontfamilyoptions: sfdefault\n        colorlinks: true\n\nbibliography: ../AppliedBib.bib\n\nengine: julia\n\nexecute:\n    echo: true\n---\n\n\n\n\n\n\n\n\n# [Quick Recap from last Week]{.flow} {.title}\n\n## Functions\n\n- Functions are reusable blocks of code\n- Define functions using the `function` keyword\n- Functions can take arguments and return values\n- Use `return` to specify the output of a function\n\n. . .\n\n::: {.callout-tip}\nYou can create anonymous functions using the `->` syntax for quick, one-off operations.\n:::\n\n## Packages\n\n- Packages extend Julia's functionality\n- Use `using Pkg` to access package management\n- Install packages with `Pkg.add(\"PackageName\")`\n- Import packages with `using PackageName` or `import PackageName`\n\n## DataFrames\n\n- DataFrames are used for working with tabular data\n- Create DataFrames using the `DataFrame` constructor\n- Access columns using dot notation or square brackets\n- Perform operations on columns and rows\n\n. . .\n\n::: {.callout-tip}\nUse `describe(df)` to get a quick summary of your DataFrame.\n:::\n\n## Input/Output (IO)\n\n- IO operations allow reading from and writing to files\n- Reading and writing CSV files can be done with the `CSV` package\n- Use `CSV.read()` to read a CSV file into a DataFrame\n- Use `CSV.write()` to write a DataFrame to a CSV file\n\n## Plots\n\n- Plotting in Julia is done through packages like Plots.jl\n- Create basic plots with functions like `plot()`, `scatter()`, `bar()`\n- Customize plots with attributes like `title`, `xlabel`, `ylabel`\n\n. . .\n\n::: {.callout-tip}\nExplore different plot types and in the long term even backends for various output formats and interactivity.\n:::\n\n## Solutions from last Week\n\n- The tutorials from last week will again be [available on Friday]{.highlight}\n- You can access them in the project folder on Github\n- Click on the little cat icon on the bottom right\n\n. . .\n\n::: {.callout-tip}\n[You can ask questions anytime in class or via email!]{.highlight}\n:::\n\n# [Five Tutorials for this Week]{.flow} {.title}\n\n## Topics of the Tutorials\n\n- **JuMP**: Learn how to use JuMP to define optimization problems\n- **Variable Bounds**: Learn how to set variable bounds\n- **Constrains**: Learn how to add constraints to your model\n- **Advanced Modeling**: Learn how to model more complex problems\n- **Transport Problem**: Learn how to solve a transportation problem\n\n## Get started with the tutorials\n\n- Download this weeks tutorials and start with the first one\n- [Remember, you can ask questions anytime!]{.highlight}\n\n. . .\n\n::: {.callout-note}\n**And that's it for this lecture!**\\\nThe remaining time we will already start working on the problems of the fourth lecture. From next week, we will start with different optimizations problems and topics, that we address together in the course.\n:::\n\n# [Literature]{.flow} {.title}\n\n## Literature\n\n- Lauwens, B., & Downey, A. B. (2019). Think Julia: How to think like a computer scientist (First edition). O’Reilly®. [Link to the free book website](https://benlauwens.github.io/ThinkJulia.jl/latest/book.html).\n\n- [Julia Documentation](https://docs.julialang.org/)\n\nFor more interesting literature to learn more about Julia, take a look at the [literature list](../general/literature.qmd) of this course.\n\n",
    "supporting": [
      "lecture-jump_files"
    ],
    "filters": [],
    "includes": {}
  }
}